Longest Common Subsequence
--------------------------
1. consider the cases where last elements are equal or not
2. Start from bottom to top
3. LCS[i][j] = LCS[i-1][j-1] + 1  (if : X[i] == Y[j])
	     = max(LCS[i-1][j],LCS[i][j-1])
-------------------------------------------------------------
int longestCommonSubsequence(string text1, string text2) {
        int m = text1.length(),n = text2.length();
        if(m == 0 || n == 0)
            return 0;
        int dp[m+1][n+1];
        for(int i=0;i<=m;i++)
            dp[i][0] = 0;
        for(int j=0;j<=n;j++)
            dp[0][j] = 0;
        for(int i=1;i<=m;i++){
            for(int j=1;j<=n;j++){
                if(text1[i-1] == text2[j-1])
                    dp[i][j] = 1  + dp[i-1][j-1];
                else
                    dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
            }
        }
        return dp[m][n];
    }